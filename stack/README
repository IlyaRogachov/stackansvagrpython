!!!!!!!!!!!!!!!!!!!!Before running the application do not forget create network for VirtualBox, script for creating network are located into root of repository "virtualboxnetwork.sh"

Actually that is not best solution - in this case the best solution is creating jenkins with workers as part of cluster and run it as pod and sure use groovy, but sorry guys I do not have enough time for this.
I have created application and use the faster solution  - not the best) 

This very very simple example how to run application using kubernetes
Stack has run.sh script for full installation of system to virtualbox vm's

---------------------------------------
ansible --version
ansible 2.3.1.0

Ubuntu 17.10

VBoxManage --version
5.1.34_Ubuntur121010

vagrant -v
Vagrant 2.0.4

------------------------------------------

192.168.56.82 application.com

-------------------------------------------

In this case has been used:

Ansible
Jenkins (admin/admin) 192.168.56.85:8080
http://192.168.56.85:8080/job/Deploy/
Kubernetes
Docker

--------------------------------------------------------------------------

Into jenkins has been created build/deploy job.
Deploy job builds docker image and push it to docker repository
with ssl connection after that it makes deploy using "helm"
on master node of kubernetes cluster

This installation contain few ansible steps:

1) own - role need to anable ip forwading and reboot system
2) kargo - role need to install cluster and install all kubernetes services like: etcd, kubectl etc
3) dockerrepo - role need to install and run docker repository wiht ssl keys
4) helmmysql - database creation role
5) jenkinsans - role need to install jenkins, plugins and jobs

--------------------------------------------------------------------------

In a case you want to change number of replicas you need just increase variable

on master server (192.168.56.81) you are able to use following commands:

helml ls - global information regarding deployments

kubectl get nodes - cluster status
kubectl get pods  - pods status
kubectl get services - service status

